# Application Configuration
spring.application.name=service-request-email-bot
server.port=8090

# Scheduling Configuration
app.email.check-interval=30
app.email.enabled=true

# Temp Directory Configuration
app.temp.directory=temp_attachments

# Logging Configuration
logging.level.com.servicerequest=INFO
logging.level.org.springframework.scheduling=DEBUG

# Database Configuration (Production - MySQL/PostgreSQL)
# spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:servicerequest}
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.datasource.username=${DB_USER:root}
# spring.datasource.password=${DB_PASS:}

# H2 Database Configuration (Development/Testing)
# Using H2 for development to avoid MySQL connection issues
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false

# Logging Configuration
logging.level.com.servicerequest.emailbot=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.scheduling=DEBUG

# Email Processing Configuration
app.email.check-interval=${EMAIL_CHECK_INTERVAL:30000}
app.temp.directory=${TEMP_DIRECTORY:temp_attachments}

# Local Storage Directory (for thread mappings and session data)
app.storage.directory=${STORAGE_DIRECTORY:data/}

# Scheduling Configuration
spring.task.scheduling.pool.size=2

# Slack Configuration
slack.bot.token=${SLACK_BOT_TOKEN:}
slack.signing.secret=${SLACK_SIGNING_SECRET:}
slack.app.token=${SLACK_APP_TOKEN:}

# Claude API Configuration
claude.api.key=${CLAUDE_API_KEY:}
claude.api.url=https://api.anthropic.com/v1/messages
claude.api.version=2023-06-01

# Service Request API Configuration
service.request.api.url=${SERVICE_REQUEST_API:http://10.199.100.54:2500/fibi-service-request/saveOrUpdateServiceRequest}
service.request.view.url=${SERVICE_REQUEST_VIEW_URL:http://localhost:2500/#/fibi/service-request/overview?serviceRequestId=}
submit.sr.api.url=${SUBMIT_SR_API:http://localhost:2500/fibi-service-request/submitServiceRequest}

# Questionnaire API Configuration
questionnaire.api.url=${QUESTIONNAIRE_API:http://10.199.100.54:2500/getQuestionnaire}
get.questionnaire.api.url=${GET_QUESTIONNAIRE_API:http://localhost:2500/getQuestionnaire}
get.applicable.questionnaire.api.url=${GET_APPLICABLE_QUESTIONNAIRE_API:http://localhost:2500/getApplicableQuestionnaire}

# Comments and Attachments API Configuration
comments.api.url=${COMMENTS_API:http://localhost:2500/fibi-service-request/addSRCommentAndAttachment}
attachment.api.url=${ATTACHMENT_API:http://10.199.100.54:2500/fibi-service-request/addServiceRequestAttachments}

# Authentication API Configuration
auth.api.url=${AUTH_API:http://localhost:2500/auth/login}

# Outlook Configuration
outlook.client.id=${OUTLOOK_CLIENT_ID:}
outlook.client.secret=${OUTLOOK_CLIENT_SECRET:}
outlook.tenant.id=${OUTLOOK_TENANT_ID:common}
outlook.user.email=${OUTLOOK_USER_EMAIL:}
outlook.redirect.uri=${OUTLOOK_REDIRECT_URI:http://localhost}
outlook.redirect.url.link=${OUTLOOK_REDIRECT_URL_LINK:}

# Default Configuration Values
default.reporter.person.id=${DEFAULT_REPORTER_PERSON_ID:10000000001}
default.unit.number=${DEFAULT_UNIT_NUMBER:000001}

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB

# Thread Mapping Configuration
thread.mapping.file=${THREAD_MAPPING_FILE:thread_sr_mapping.json}
user.credentials.file=${USER_CREDENTIALS_FILE:user_credentials.json}false
